.Counter.frame {
    display: grid;
    place-items: center;   
    background-color: white;
    --counter-animation: counter-background 10s cubic-bezier(0.15, -0.93, 0.84, 1.64) infinite alternate;
    animation: var(--counter-animation);
}

/* .Counter.frame::after {
    content: "";
    position: absolute;
    width: 100%;
    height: 50%;
    background-color: rgba(0 0 0 / .1);
    top: 0;
    pointer-events: none;
} */

.Counter .numbers-container {
    background-color: aqua;
    position: relative;
    width: 160px;
    height: 100px;
    display: flex;
    justify-content: space-evenly;
    border: solid 20px rgb(46, 192, 215);
    pointer-events: none;
    overflow: hidden; /* funguje i na border! */
}

.Counter .numbers-container::after {
    content: "";
    position:absolute;
    width: 26px; /*160 - 40; 120 - 24*4; 24 - 6*2; 12/ 3; 4 - 6px na rozích, a 4px mezery*/
    height: 40px;
    top: 10px;
    left: 5px;
    background-color: rgb(46, 192, 215);
    z-index: 1;
    color: rgb(46, 192, 215);
    box-shadow: 28px 0 0 0, 56px 0 0 0, 84px 0 0 0;
}

.Counter .numbers {
    /* background-color: rgb(32, 166, 166); */
    z-index: 2;
    color:white;
    font-size: 30px;
    line-height: 100%; /*tj. 30px*/
    animation: counter-numbers 1s steps(1) infinite;
} 

.Counter .numbers[data-key="ones"] {
   transform: translateY(-180px); /*o 61 121 182px*/
    animation-duration: 10s;
    /* animation-timing-function: steps(2); */
}

.Counter .numbers[data-key="tens"] {
    animation-duration: 100s;
}

.Counter .numbers[data-key="hundreds"] {
    animation-duration: 1000s;
}

.Counter .numbers[data-key="thousands"] {
    animation-duration: 10000s;
}



.Counter .numbers .zeroToNine {
    color: white;
    border: solid 1px transparent;
    padding: 14px 0; /*14 + 14 + 2 + 30 px = 60px 
    (nezapomenout počítat line-height a né font-size! ) */
}

.Counter #counter-input {
    position: absolute;
    top: 66%;
    display: none;
    z-index: 100;
}

.Counter label[for="counter-input"] {
    position: absolute;
    top: 65%;
    background-color: aqua;
    width: 5%;
    height: 5%;
    transition: opacity .1s ease,
    transform .4s ease;
    cursor: pointer;
}

.Counter label[for="counter-input"].play {
clip-path: polygon(0 0, 100% 50%, 0 100%);
opacity: 0;
transform: scale(0);
}

.Counter label[for="counter-input"].stop {
    opacity: 1;
    transform: scale(1);
    background-color: transparent;
}

.Counter label[for="counter-input"].stop::before {
    content: "";
    position: absolute;
    width: 30%;
    height: 100%;
    background-color: aqua;
    left: 0;
}

.Counter label[for="counter-input"].stop::after {
    content: "";
    position: absolute;
    width: 30%;
    height: 100%;
    background-color: aqua;
    right: 0;
}

.Counter #counter-input:checked ~ label[for="counter-input"].play {
    transform: scale(1);
    opacity: 1;
}

.Counter #counter-input:checked ~ label[for="counter-input"].stop {
    transform: scale(0);
    opacity: 0;
}

.Counter #counter-input:checked ~ .numbers-container .numbers {
    animation-play-state: paused;
}

@keyframes counter-background {
    from {
        background: rgba(166, 214, 214, 1);
    }

    to {
        background: #a6b1e1;
    }
}

@keyframes counter-numbers {
    0% {transform: translateY(0px);}
    10% {transform: translateY(-60px);}
    20% {transform: translateY(-120px)}
    30% {transform: translateY(-180px)} 
    40% {transform: translateY(-240px)}   
    50% {transform: translateY(-300px)}
    60% {transform: translateY(-360px)}
    70% {transform: translateY(-420px)}
    80% {transform: translateY(-480px)}
    90% {transform: translateY(-540px)}
    100% {transform: translateY(-600px)}
}